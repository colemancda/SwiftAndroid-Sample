
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql' 'Sources' '../java' ///

/// interface com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanResult ///

public protocol SwiftBluetoothBinding_ScanResult: JavaProtocol {

    /// public abstract com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$BluetoothDevice com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanResult.getDevice()

    func getDevice() -> SwiftBluetoothBinding_BluetoothDevice!

    /// public abstract int com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanResult.getRSSI()

    func getRSSI() -> Int

    /// public abstract com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanRecord com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanResult.getScanRecord()

    func getScanRecord() -> SwiftBluetoothBinding_ScanRecord!

    /// public abstract long com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanResult.getTimeStamp()

    func getTimeStamp() -> Int64

    /// public abstract java.lang.String com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanResult.toString()

    func toString() -> String!

}


open class SwiftBluetoothBinding_ScanResultForward: JNIObjectForward, SwiftBluetoothBinding_ScanResult {

    private static var SwiftBluetoothBinding_ScanResultJNIClass: jclass?

    /// public abstract com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$BluetoothDevice com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanResult.getDevice()

    private static var getDevice_MethodID_6: jmethodID?

    open func getDevice() -> SwiftBluetoothBinding_BluetoothDevice! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getDevice", methodSig: "()Lcom/johnholdsworth/swiftbindings/SwiftBluetoothBinding$BluetoothDevice;", methodCache: &SwiftBluetoothBinding_ScanResultForward.getDevice_MethodID_6, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? SwiftBluetoothBinding_BluetoothDeviceForward( javaObject: __return ) : nil
    }


    /// public abstract int com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanResult.getRSSI()

    private static var getRSSI_MethodID_7: jmethodID?

    open func getRSSI() -> Int {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getRSSI", methodSig: "()I", methodCache: &SwiftBluetoothBinding_ScanResultForward.getRSSI_MethodID_7, args: &__args, locals: &__locals )
        return Int(__return)
    }


    /// public abstract com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanRecord com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanResult.getScanRecord()

    private static var getScanRecord_MethodID_8: jmethodID?

    open func getScanRecord() -> SwiftBluetoothBinding_ScanRecord! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getScanRecord", methodSig: "()Lcom/johnholdsworth/swiftbindings/SwiftBluetoothBinding$ScanRecord;", methodCache: &SwiftBluetoothBinding_ScanResultForward.getScanRecord_MethodID_8, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? SwiftBluetoothBinding_ScanRecordForward( javaObject: __return ) : nil
    }


    /// public abstract long com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanResult.getTimeStamp()

    private static var getTimeStamp_MethodID_9: jmethodID?

    open func getTimeStamp() -> Int64 {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallLongMethod( object: javaObject, methodName: "getTimeStamp", methodSig: "()J", methodCache: &SwiftBluetoothBinding_ScanResultForward.getTimeStamp_MethodID_9, args: &__args, locals: &__locals )
        return __return
    }


    /// public abstract java.lang.String com.johnholdsworth.swiftbindings.SwiftBluetoothBinding$ScanResult.toString()

    private static var toString_MethodID_10: jmethodID?

    open func toString() -> String! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "toString", methodSig: "()Ljava/lang/String;", methodCache: &SwiftBluetoothBinding_ScanResultForward.toString_MethodID_10, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? String( javaObject: __return ) : nil
    }


}

